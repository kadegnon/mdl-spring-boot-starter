package be.unamur.info.mdl.groggy.ctrler;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import be.unamur.info.mdl.groggy.dal.entity.User;
import be.unamur.info.mdl.groggy.dal.UserRepository;

import java.util.HashMap;
import java.util.Map;


@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String name, @RequestParam String email) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		User newUser = new User(name,email);
		userRepository.save(newUser);
		return "Saved";
	}

	@GetMapping(path="/all")
	public @ResponseBody Map<Long, User> getAllUsers() {
		// This returns a JSON or XML with the users
		Map<Long, User> users = new HashMap<Long, User>();
		for (User user :	 userRepository.findAll()) {
			users.put(user.id(), user);
		}
		return users;
	}
}
